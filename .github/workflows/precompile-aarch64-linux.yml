name: precompile-aarch64-linux

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  aarch64-linux-gnu:
    if: startsWith(github.ref, 'refs/tags/v25.2') != 'true' && startsWith(github.ref, 'refs/tags/v25.1') != 'true' && startsWith(github.ref, 'refs/tags/v25.0') != 'true'
    runs-on: ubuntu-latest
    env:
      OPENSSL_VERSION: "3.2.1"
      OPENSSL_VERSION_OTP_24_AND_BELOW: "1.1.1w"

    name: aarch64-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24')
        id: cache-openssl-otp24
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-gnu
          path: |
            ./openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-gnu.tar.gz

      - name: Download Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24') && steps.cache-openssl-otp24.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION_OTP_24_AND_BELOW}/openssl-aarch64-linux-gnu.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-gnu.tar.gz"

      - name: Cache Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true'
        id: cache-openssl
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-gnu
          path: |
            ./openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-gnu.tar.gz

      - name: Download Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true' && steps.cache-openssl.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION}/openssl-aarch64-linux-gnu.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-gnu.tar.gz"

      - name: Cache OTP Source Code
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: otp-${{ github.ref_name }}
          path: |
            ./otp_src_${{ github.ref_name }}.tar.gz

      - name: Download OTP Source Code
        if: steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          export OTP_VERSION=${GITHUB_REF##*/v}
          echo "OTP_VERSION: $OTP_VERSION"
          echo "github.ref_name: ${{ github.ref_name }}"
          curl -fSL "https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" -o "otp_src_${{ github.ref_name }}.tar.gz"

      - name: Pull docker image
        run: |
          sudo docker pull quay.io/pypa/manylinux2014_aarch64:latest

      - name: Install binfmt
        run: |
          sudo apt update
          sudo apt install -y binfmt-support qemu-user-static

      - name: Compile OTP
        run: |
          cp .github/script-to-build-gnu.sh ./
          cp .github/do-build.sh ./

          case "${{ github.ref_name }}" in
            v24.*)
              bash ./script-to-build-gnu.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}" "aarch64"
              ;;
            *)
              bash ./script-to-build-gnu.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION }}" "aarch64"
              ;;
          esac

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            otp-*.tar.gz

  aarch64-linux-musl:
    if: startsWith(github.ref, 'refs/tags/v25.2') != 'true' && startsWith(github.ref, 'refs/tags/v25.1') != 'true' && startsWith(github.ref, 'refs/tags/v25.0') != 'true'
    runs-on: ubuntu-latest
    env:
      OPENSSL_VERSION: "3.2.1"
      OPENSSL_VERSION_OTP_24_AND_BELOW: "1.1.1w"

    name: aarch64-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24')
        id: cache-openssl-otp24
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-musl
          path: |
            ./openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-musl.tar.gz

      - name: Download Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24') && steps.cache-openssl-otp24.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION_OTP_24_AND_BELOW}/openssl-aarch64-linux-musl.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-musl.tar.gz"

      - name: Cache Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true'
        id: cache-openssl
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-musl
          path: |
            ./openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-musl.tar.gz

      - name: Download Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true' && steps.cache-openssl.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION}/openssl-aarch64-linux-musl.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-musl.tar.gz"

      - name: Cache OTP Source Code
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: otp-${{ github.ref_name }}
          path: |
            ./otp_src_${{ github.ref_name }}.tar.gz

      - name: Download OTP Source Code
        if: steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          export OTP_VERSION=${GITHUB_REF##*/v}
          echo "OTP_VERSION: $OTP_VERSION"
          echo "github.ref_name: ${{ github.ref_name }}"
          curl -fSL "https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" -o "otp_src_${{ github.ref_name }}.tar.gz"

      - name: Pull docker image
        run: |
          sudo docker pull --platform=linux/aarch64 alpine:latest

      - name: Install binfmt
        run: |
          sudo apt update
          sudo apt install -y binfmt-support qemu-user-static

      - name: Precompile
        run: |
          cp .github/script-to-build-musl.sh ./
          cp .github/do-build.sh ./

          case "${{ github.ref_name }}" in
            v24.*)
              bash ./script-to-build-musl.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}" "aarch64" "alpine:latest"
              ;;
            *)
              bash ./script-to-build-musl.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION }}" "aarch64" "alpine:latest"
              ;;
          esac

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') 
        with:
          files: |
            otp-*.tar.gz

  self-hosted-aarch64-linux-gnu:
    if: startsWith(github.ref, 'refs/tags/v25.2') || startsWith(github.ref, 'refs/tags/v25.1') || startsWith(github.ref, 'refs/tags/v25.0')
    runs-on: self-hosted-aarch64-linux
    env:
      OPENSSL_VERSION: "3.2.1"
      OPENSSL_VERSION_OTP_24_AND_BELOW: "1.1.1w"

    name: aarch64-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24')
        id: cache-openssl-otp24
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-gnu
          path: |
            ./openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-gnu.tar.gz

      - name: Download Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24') && steps.cache-openssl-otp24.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION_OTP_24_AND_BELOW}/openssl-aarch64-linux-gnu.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-gnu.tar.gz"

      - name: Cache Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true'
        id: cache-openssl
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-gnu
          path: |
            ./openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-gnu.tar.gz

      - name: Download Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true' && steps.cache-openssl.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION}/openssl-aarch64-linux-gnu.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-gnu.tar.gz"

      - name: Cache OTP Source Code
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: otp-${{ github.ref_name }}
          path: |
            ./otp_src_${{ github.ref_name }}.tar.gz

      - name: Download OTP Source Code
        if: steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          export OTP_VERSION=${GITHUB_REF##*/v}
          echo "OTP_VERSION: $OTP_VERSION"
          echo "github.ref_name: ${{ github.ref_name }}"
          curl -fSL "https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" -o "otp_src_${{ github.ref_name }}.tar.gz"

      - name: Pull docker image
        run: |
          sudo docker pull quay.io/pypa/manylinux2014_aarch64:latest

      - name: Compile OTP
        run: |
          cp .github/script-to-build-gnu.sh ./
          cp .github/do-build.sh ./

          case "${{ github.ref_name }}" in
            v24.*)
              bash ./script-to-build-gnu.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}" "aarch64"
              ;;
            *)
              bash ./script-to-build-gnu.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION }}" "aarch64"
              ;;
          esac

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            otp-*.tar.gz

  self-hosted-aarch64-linux-musl:
    if: startsWith(github.ref, 'refs/tags/v25.2') || startsWith(github.ref, 'refs/tags/v25.1') || startsWith(github.ref, 'refs/tags/v25.0')
    runs-on: self-hosted-aarch64-linux
    env:
      OPENSSL_VERSION: "3.2.1"
      OPENSSL_VERSION_OTP_24_AND_BELOW: "1.1.1w"

    name: aarch64-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24')
        id: cache-openssl-otp24
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-musl
          path: |
            ./openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-musl.tar.gz

      - name: Download Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24') && steps.cache-openssl-otp24.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION_OTP_24_AND_BELOW}/openssl-aarch64-linux-musl.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-aarch64-linux-musl.tar.gz"

      - name: Cache Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true'
        id: cache-openssl
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-musl
          path: |
            ./openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-musl.tar.gz

      - name: Download Precompiled OpenSSL
        if: startsWith(github.ref, 'refs/tags/v24') != 'true' && steps.cache-openssl.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION}/openssl-aarch64-linux-musl.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION }}-aarch64-linux-musl.tar.gz"

      - name: Cache OTP Source Code
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: otp-${{ github.ref_name }}
          path: |
            ./otp_src_${{ github.ref_name }}.tar.gz

      - name: Download OTP Source Code
        if: steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          export OTP_VERSION=${GITHUB_REF##*/v}
          echo "OTP_VERSION: $OTP_VERSION"
          echo "github.ref_name: ${{ github.ref_name }}"
          curl -fSL "https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" -o "otp_src_${{ github.ref_name }}.tar.gz"

      - name: Pull docker image
        run: |
          sudo docker pull --platform=linux/aarch64 alpine:latest

      - name: Compile OTP
        run: |
          cp .github/script-to-build-musl.sh ./
          cp .github/do-build.sh ./

          case "${{ github.ref_name }}" in
            v24.*)
              bash ./script-to-build-musl.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}" "aarch64"
              ;;
            *)
              bash ./script-to-build-musl.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION }}" "aarch64"
              ;;
          esac

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            otp-*.tar.gz

  deploy-aarch64-linux:
    runs-on: ubuntu-latest
    needs: [aarch64-linux-gnu, aarch64-linux-musl, self-hosted-aarch64-linux-gnu, self-hosted-aarch64-linux-musl]
    steps:
      - name: deploy
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'cocoa-xu/otp-build'
        env:
          DEPLOY_AARCH64_LINUX_GNU_HOOK_URL: ${{ secrets.DEPLOY_AARCH64_LINUX_GNU_HOOK_URL }}
          DEPLOY_AARCH64_LINUX_MUSL_HOOK_URL: ${{ secrets.DEPLOY_AARCH64_LINUX_MUSL_HOOK_URL }}
        run: |
          curl -sS --no-progress-meter "${DEPLOY_AARCH64_LINUX_GNU_HOOK_URL}${{ github.ref_name }}"
          curl -sS --no-progress-meter "${DEPLOY_AARCH64_LINUX_MUSL_HOOK_URL}${{ github.ref_name }}"

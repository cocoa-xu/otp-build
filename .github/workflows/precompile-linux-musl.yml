name: precompile-linux-musl

on:
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  linux-musl:
    runs-on: ubuntu-latest
    env:
      OPENSSL_VERSION: "3.3.0"
      OPENSSL_VERSION_OTP_24_AND_BELOW: "1.1.1w"
    strategy:
      matrix:
        arch: [x86_64, i386, ppc64le, s390x]
      fail-fast: false

    name: ${{ matrix.arch }}-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Precompiled OpenSSL for OTP 24 and below
        if: startsWith(github.ref, 'refs/tags/v24') || startsWith(github.ref, 'refs/tags/v23')
        id: cache-openssl-otp24
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-${{ matrix.arch }}-linux-musl
          path: |
            ./openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-${{ matrix.arch }}-linux-musl.tar.gz

      - name: Download Precompiled OpenSSL for OTP 24 and below
        if: (startsWith(github.ref, 'refs/tags/v24') || startsWith(github.ref, 'refs/tags/v23')) && steps.cache-openssl-otp24.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION_OTP_24_AND_BELOW}/openssl-${{ matrix.arch }}-linux-musl.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}-${{ matrix.arch }}-linux-musl.tar.gz"

      - name: Cache Precompiled OpenSSL
        if: "!startsWith(github.ref, 'refs/tags/v24') && !startsWith(github.ref, 'refs/tags/v23')"
        id: cache-openssl
        uses: actions/cache@v4
        with:
          key: openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.arch }}-linux-musl
          path: |
            ./openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.arch }}-linux-musl.tar.gz

      - name: Download Precompiled OpenSSL
        if: "!startsWith(github.ref, 'refs/tags/v24') && !startsWith(github.ref, 'refs/tags/v23') && steps.cache-openssl.outputs.cache-hit != 'true'"
        run: |
          curl -fSL "https://github.com/cocoa-xu/openssl-build/releases/download/v${OPENSSL_VERSION}/openssl-${{ matrix.arch }}-linux-musl.tar.gz" -o "openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.arch }}-linux-musl.tar.gz"

      - name: Cache OTP Source Code
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: otp-${{ github.ref_name }}
          path: |
            ./otp_src_${{ github.ref_name }}.tar.gz

      - name: Download OTP Source Code
        if: steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          export OTP_VERSION=${GITHUB_REF##*/v}
          echo "OTP_VERSION: $OTP_VERSION"
          echo "github.ref_name: ${{ github.ref_name }}"
          curl -fSL "https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" -o "otp_src_${{ github.ref_name }}.tar.gz" || \
          curl -fSL "https://github.com/erlang/otp/archive/refs/tags/OTP-${OTP_VERSION}.tar.gz" -o "otp_src_${{ github.ref_name }}.tar.gz"

      - name: Pull docker image
        run: |
          sudo docker pull --platform=linux/${{ matrix.arch }} alpine:latest

      - name: Install binfmt
        run: |
          sudo apt update
          sudo apt install -y binfmt-support qemu-user-static

      - name: Precompile
        run: |
          cp .github/script-to-build-musl.sh ./
          cp .github/do-build.sh ./

          case "${{ github.ref_name }}" in
            v24.* | v23.*)
              bash ./script-to-build-musl.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION_OTP_24_AND_BELOW }}" "${{ matrix.arch }}" "alpine:latest"
              ;;
            *)
              bash ./script-to-build-musl.sh "${{ github.ref_name }}" "${{ env.OPENSSL_VERSION }}" "${{ matrix.arch }}" "alpine:edge"
              ;;
          esac

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            otp-*.tar.gz

  deploy-linux-musl:
    runs-on: ubuntu-latest
    needs: linux-musl
    steps:
      - name: deploy
        if: startsWith(github.ref, 'refs/tags/') && github.repository == 'cocoa-xu/otp-build'
        env:
          DEPLOY_LINUX_MUSL_HOOK_URL: ${{ secrets.DEPLOY_LINUX_MUSL_HOOK_URL }}
        run: |
          curl -sS --no-progress-meter "${DEPLOY_LINUX_MUSL_HOOK_URL}${{ github.ref_name }}"
